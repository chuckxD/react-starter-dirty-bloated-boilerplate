{
  "files.eol": "\n",
  "editor.wordWrapColumn": 420,
  "prettier.eslintIntegration": true,
  "git.ignoreLimitWarning": true,
  "editor.useTabStops": true,
  "editor.tabSize": 2,
  "editor.insertSpaces": true,
  "editor.detectIndentation": true,
  "editor.formatOnSave": false,
  "editor.formatOnPaste": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  // "editor.defaultFormatter": "dbaeumer.vscode-eslint",
  // "editor.defaultFormatter": "vscode.typescript-language-features",
  "[javascript]": {
    // "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json,jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  // less aggressive intellisene start
  // https://ourcodeworld.com/articles/read/505/how-to-disable-autocompletion-and-intellisense-in-microsoft-visual-studio-code
  //
  // Controls if lines should wrap. The lines will wrap at min(editor.wrappingColumn, viewportWidthInColumns).
  "editor.wordWrap": "off",
  // Controls the indentation of wrapped lines. Can be one of 'none', 'same' or 'indent'.
  "editor.wrappingIndent": "none",
  // Controls if quick suggestions should show up or not while typing
  "editor.quickSuggestions": true,
  // Controls the delay in ms after which quick suggestions will show up
  "editor.quickSuggestionsDelay": 90,
  // Enables parameter hints
  "editor.parameterHints": true,
  // Controls if the editor should automatically close brackets after opening them
  // "editor.autoClosingBrackets": false,
  // Controls if the editor should automatically format the line after typing
  "editor.formatOnType": false,
  // Controls if suggestions should automatically show up when typing trigger characters
  "editor.suggestOnTriggerCharacters": false,
  // Controls if suggestions should be accepted 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions.
  "editor.acceptSuggestionOnEnter": "off",
  // Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (;) can be a commit character that accepts a suggestion and types that character.
  "editor.acceptSuggestionOnCommitCharacter": false,
  "workbench.activityBar.visible": true,
}
